{"version":3,"sources":["Components/LoginForm.js","Components/RegisterForm.js","Components/Home.js","Components/Blog.js","Components/Chatting.js","App.js","serviceWorker.js","index.js"],"names":["LoginForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","OnHandleChange","event","target","value","name","setState","defineProperty","onHandleSubmit","preventDefault","onClickSubmit","state","email","password","react_default","a","createElement","onSubmit","action","method","role","className","type","onChange","id","Component","RegisterForm","onSubmitForm","val","first_name","last_name","password_confirmation","placeholder","defaultValue","Home","Blog","setInterval","htmlFor","rows","Chatting","deletes","arr","ClassWantToChange","i","length","ListRoom","Name","innerHTMl","Check","es","RoomNow","User","ValChat","that","assertThisInitialized","socket","io","OnHandleClick","edd","emit","ed","on","listroom","push","$","console","log","e","attr","user","msg","concat","append","document","html","App","Data","ObjectS","Email","PassWord","Avatar","GeneratedID","Users","S","localStorage","setItem","JSON","stringify","s4","Math","floor","random","toString","substring","setAva","getElementById","data","control","innerHTML","getData","onSubmitAvatar","tooken","OnSetAvatar","Tooken","parse","getItem","_this2","react_router_dom","data-toggle","data-target","to","test","onClick","src","react_router","path","render","Components_Chatting","Components_Blog","Components_RegisterForm","Components_LoginForm","component","Components_Home","exact","Boolean","window","location","hostname","match","ReactDOM","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.24d50f33.chunk.js","sourcesContent":["\r\nimport 'D:/REACT-APP/review-react/src/Css/CssLogin.css';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nclass LoginForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n       this.state=({\r\n           email:\"\",\r\n           password:\"\"\r\n       });\r\n    }\r\n   \r\n    OnHandleChange=(event)=>{\r\n        var target=event.target;\r\n        var value=target.value;\r\n        var name=target.name;\r\n      \r\n       this.setState({\r\n           [name]:value\r\n        });\r\n     \r\n    }\r\n    onHandleSubmit=(event)=>{\r\nevent.preventDefault();\r\nthis.props.onClickSubmit(this.state);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.onHandleSubmit} action=\"\" method=\"POST\" role=\"form\">\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-sm-2 control-label\">Email</label>\r\n                        <div className=\"col-sm-10\">\r\n                            <input  type=\"email\" name=\"email\" className=\"form-control\" onChange={this.OnHandleChange}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-sm-2 control-label\">PassWorld</label>\r\n                        <div className=\"col-sm-10\">\r\n                            <input  type=\"password\" name=\"password\" className=\"form-control\" onChange={this.OnHandleChange}/>\r\n                        </div>\r\n                    </div>\r\n                       \r\n                       <button type=\"submit\" className=\"btn btn-primary\">\r\n                            Login\r\n                       </button>\r\n                 </form>\r\n                <span className=\"label label-warning\" id=\"inforLoginFalse\"></span>\r\n               \r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginForm;\r\n\r\n","\r\nimport React, {\r\n    Component\r\n} from 'react';\r\nclass RegisterForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            first_name:\"\",\r\n            last_name:\"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            password_confirmation:\"\"// TODO Use JQuery TODO\r\n        });\r\n    }\r\n    onSubmit=(event)=>{\r\n      event.preventDefault();\r\n      this.props.onSubmitForm(this.state);\r\n\r\n    }\r\n    onChange=(event)=>{\r\n      const target=event.target;\r\n      const name=target.name;\r\n      const val = target.value;\r\n      this.setState({\r\n        [name]:val\r\n      });\r\n    }\r\n    render() {\r\n        return ( \r\n<div>\r\n<div className=\"container\">\r\n  <div className=\"row centered-form\">\r\n    <div className=\"col-xs-8\">\r\n      <div className=\"panel panel-default\">\r\n        <div className=\"panel-heading\">\r\n          <h3 className=\"panel-title\">Registation <small>GOOD LUCK! </small></h3>\r\n        </div>\r\n        <div className=\"panel-body\">\r\n          <form onSubmit={this.onSubmit}>\r\n            <div className=\"row\">\r\n              <div className=\"col-xs-6 col-sm-6 col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <input onChange={this.onChange} type=\"text\" name=\"first_name\" id=\"first_name\" className=\"form-control input-sm\" placeholder=\"First Name\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xs-6 col-sm-6 col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <input onChange={this.onChange} type=\"text\" name=\"last_name\" id=\"last_name\" className=\"form-control input-sm\" placeholder=\"Last Name\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input onChange={this.onChange} type=\"email\" name=\"email\" id=\"email\" className=\"form-control input-sm\" placeholder=\"Email Address\" />\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-xs-6 col-sm-6 col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <input onChange={this.onChange} type=\"password\" name=\"password\" id=\"password\" className=\"form-control input-sm\" placeholder=\"Password\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xs-6 col-sm-6 col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <input  type=\"password\" name=\"password_confirmation\" id=\"password_confirmation\" className=\"form-control input-sm\" placeholder=\"Confirm Password\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <input  type=\"submit\" defaultValue=\"Register\" className=\"btn btn-info btn-block\" />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React, { Component } from 'react';\r\n\r\n\r\nclass Home extends Component {\r\n\r\n    render() {\r\n        return ( \r\n            <div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\n\r\nclass Blog extends Component {\r\ncomponentWillMount() {\r\n}\r\nconstructor(props) {\r\n  super(props);\r\n  setInterval(() => {\r\n  }, 100);\r\n}\r\n\r\n    render() {\r\n        return (\r\n          <div>\r\n  <div className=\"container\">\r\n    <h2>Form control: textarea</h2>\r\n    <p>The form below contains a textarea for comments:</p>\r\n    <form>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"comment\">Comment:</label>\r\n        <textarea className=\"form-control\" rows={5} id=\"comment\" defaultValue={\"\"} />\r\n        <button type=\"button\" className=\"btn btn-primary\">button</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Blog;","\r\nimport React, { Component } from 'react';\r\nimport io from \"socket.io-client\";\r\nimport $ from 'jquery';\r\n\r\nimport \"D:/REACT-APP/review-react/src/Css/Chattting.css\"\r\n class Chatting extends Component {\r\n   constructor(props) {\r\n     super(props);\r\n     this.state={\r\n        ListRoom :[\r\n          {\r\n         Name: \"Fuck You\",\r\n         innerHTMl: \"<li >Vinh:hello</li> <li >Duc:hellos</li>\"\r\n       }, {\r\n         Name: \"Bitch You\",\r\n         innerHTMl: \"<li >Vinh:Fuck you</li> <li >Duc:hellos</li>\"\r\n       }, {\r\n         Name: \"helll You\",\r\n         innerHTMl: \"<li >Nguyen:Fasd you</li> <li >xmaf:s</li>\"\r\n       }\r\n     ],\r\n     Check:false,\r\n     es:-1,\r\n     RoomNow:0,\r\n        User:{\r\n          Name:\"\",\r\n          ValChat:\"\"\r\n        }\r\n     }\r\n     const that = this;\r\n     const socket = io(\"localhost:4001\");\r\n\r\n     this.OnHandleClick=()=>{\r\n       let edd= that.state.es + 1;\r\n       that.setState({\r\n         es:edd\r\n       })\r\n       \r\n\r\n       socket.emit('Create Room', {\r\n         ListRoom: that.state.ListRoom,\r\n         ed: that.state.es\r\n       })\r\n     }\r\n     socket.on(\"Recive Room\", function (a) {\r\n       let listroom=that.state.ListRoom;\r\n       listroom.push({\r\n         Name: $('#exampleInputAmount').val(),\r\n         innerHTMl: \"\"\r\n       });\r\n       $('#exampleInputAmount').val(\"\");\r\n       that.setState({ListRoom:listroom})\r\n       console.log('====================================');\r\n       console.log(a);\r\n       console.log('====================================');\r\n      \r\n      //  for (let i = 0; i < this.state.ListRoom.length; i++) {\r\n      //    $(\"#list-room\").append(\"<li class='list-group-item HoverAnimation'>\" + a.ListRoom[i].Name + \"</li>\");\r\n      //  }\r\n     })\r\n     this.onHandleSubmit = (e) => {\r\n       e.preventDefault();\r\n       const socket = io(\"localhost:4001\");\r\n      //  socket.emit(\"chat message\", $(\"#m\").val());\r\n      //  $(\"#m\").val('');\r\n\r\n       $('#m').attr(\"placeholder\", \"Type message here !\");\r\n       if (this.state.User.Name != \"\") {\r\n         this.setState({Check:true});\r\n         let user=this.state.User;\r\n         user.ValChat = $('#m').val();\r\n         this.setState({User:user})\r\n         socket.emit('chat message', {\r\n           Name: this.state.User.Name,\r\n           ValChat: this.state.User.ValChat\r\n         });\r\n       } else {\r\n         let user = this.state.User;\r\n         user.Name = $('#m').val();\r\n         this.setState({ User: user })\r\n       }\r\n       $('#m').val('');\r\n     }\r\n     socket.on('send message', (msg) => {\r\n       if (this.state.Check == true) {\r\n        let a = this.state.ListRoom;\r\n         let e = a[[this.state.RoomNow]].innerHTMl.concat(\"<li>\", msg.Name, \" : \", msg.ValChat, \"</li>\");\r\n         a[this.state.RoomNow].innerHTMl=e;\r\n        this.setState({\r\n          ListRoom:a\r\n        })\r\n          $('#messages').append('<li>' + \"<b>\" + msg.Name + \"</b>\"+ \" : \" + msg.ValChat + '</li>');\r\n       }\r\n     })\r\n     $(document).on('click', '.HoverAnimation', function (e) {\r\n       that.deletes($('.HoverAnimation'), \"list-group-item HoverAnimation\");\r\n\r\n       e.target.className = \"list-group-item HoverAnimation Active\";\r\n       for (let i = 0; i < $(\".HoverAnimation\").length; i++) {\r\n         if ($(\".HoverAnimation\")[i].className == \"list-group-item HoverAnimation Active\") {\r\n           that.setState({RoomNow:i})\r\n         }\r\n       }\r\n       $(\"#messages\").html('');\r\n       $(\"#messages\").html(that.state.ListRoom[that.state.RoomNow].innerHTMl);\r\n\r\n     });\r\n\r\n    }\r\n    deletes=(arr,ClassWantToChange)=>{\r\n        for (let i = 0; i < arr.length; i++) {\r\n          arr[i].className = ClassWantToChange;\r\n      }\r\n    }\r\n    componentDidMount() {\r\n    }\r\n    render() {\r\n      \r\n\r\n        return ( \r\n          <div>\r\n            {/* <div className=\"row\">\r\n\r\n              <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4 distinguish\"> */}\r\n                {/* <ul className=\"list-group\" id=\"list-room\">\r\n                  <div>\r\n                  {/* <li className=\"list-group-item HoverAnimation\">Cras justo odio</li>\r\n                  <li className=\"list-group-item HoverAnimation\">Dapibus ac facilisis in</li>\r\n                  <li className=\"list-group-item HoverAnimation\">Morbi leo risus</li>\r\n                  <li className=\"list-group-item HoverAnimation\">Porta ac consectetur ac</li>\r\n                  <li className=\"list-group-item HoverAnimation\">Vestibulum at eros</li> */}\r\n                  {/* {this.state.ListRoom.map((Objects,id)=>{\r\n                    return(<li key={id} className='list-group-item HoverAnimation'>{Objects.Name}</li>);\r\n                  })} \r\n                  </div>\r\n                </ul>\r\n                */}\r\n{/*              \r\n                <ul className=\"list-group\">\r\n\r\n                  <li>\r\n                    <div className=\"input-group\">\r\n                      <input type=\"text\" className=\"form-control\" id=\"exampleInputAmount\" placeholder=\"Write Your Name\"/>\r\n                        <span className=\"input-group-btn\">\r\n                          <button onClick={this.OnHandleClick} type=\"button\" className=\"btn btn-default\" id=\"CreateRoom\" >Create Room</button>\r\n                        </span>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div> */}\r\n                <div>\r\n                  <ul id=\"messages\">\r\n                  </ul>\r\n                </div>\r\n               <form onSubmit={this.onHandleSubmit} action=\"\" method=\"POST\" role=\"form\" id=\"ChatForm\">\r\n                {/* <!-- <label id=\"s\">input your name</label> --> */}\r\n                <input placeholder=\"Input Your Name\" id=\"m\" type=\"text\"/>\r\n                <button className=\"btn btn-default\" type=\"submit\">Send</button>\r\n              </form>\r\n\r\n          </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Chatting;","import React, { Component } from 'react';\nimport './App.css';\nimport LoginForm from 'D:/REACT-APP/review-react/src/Components/LoginForm.js';\nimport RegisterForm from './Components/RegisterForm';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Home from 'D:/REACT-APP/review-react/src/Components/Home.js';\nimport Blog from 'D:/REACT-APP/review-react/src/Components/Blog.js';\nimport Chatting from 'D:/REACT-APP/review-react/src/Components/Chatting.js';\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            Users: [\n            ],\n            getData: 0,\n            Check: false, // ! check to go\n            tooken: null,\n        };\n\n    }\n\n    // ? ==============================================================\n    onSubmitForm = (Data) => {\n            let ObjectS = {\n                Name: Data.first_name + \" \" + Data.last_name,\n                Email: Data.email,\n                PassWord: Data.password,\n                Avatar: \"http://www.riverdogdesign.com/wp-content/uploads/2012/07/unknow.png\",\n                id: this.GeneratedID()\n            }\n            let { Users } = this.state;\n            Users.push(ObjectS);\n            this.setState({\n                Users: Users,\n\n            });\n            console.log(this.state.S);\n\n            localStorage.setItem(\"Users\", JSON.stringify(this.state.Users));\n\n        }\n        //? ==================================================================\n    componentWillMount() {\n            let Data = JSON.parse(localStorage.getItem(\"Users\"));\n            this.setState({ Users: Data,getData:localStorage.Tooken });\n            \n        }\n        // !====================================================================\n    s4 = () => {\n            return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n        }\n        //?=======================================================================\n    GeneratedID = () => {\n            return this.s4() + \"-\" + this.s4() + \" \" + this.s4() + \"_\" + \"+\" + this.s4() + this.s4() + \"-\" + this.s4() + \" \" + this.s4() + \"_\" + \"+\" + this.s4() + this.s4() + \"-\" + this.s4() + \" \" + this.s4() + \"_\" + \"+\" + this.s4()\n        }\n        // !==========================================================================SETAVATAR() RUN WHEN USER CLICK TO AVATAR IMG\n    setAva = () => {\n            document.getElementById(\"rowFake\").className = \"row FUCK\";\n\n        }\n        // TODO ================================================================================\n    onClickSubmit = (data) => {\n        let a = 0;\n        // ? check the true password\n        const control = document.getElementById(\"inforLoginFalse\");\n        for (let i = 0; i <= this.state.Users.length - 1; i++) {\n            let user = this.state.Users[i]\n            if (this.state && user.Email === data.email) {\n                // TODO Check The email \n                if (this.state && user.PassWord === data.password) {\n                    a = i;\n                }\n            }\n        }\n        let user = this.state.Users[a];\n\n\n        if (this.state && user.Email === data.email) {\n            // TODO Check The email \n            if (this.state && user.PassWord === data.password) {\n                control.innerHTML = \"You Login SUCCESSFULLY!!!\";\n                control.className = \"label label-success\";\n\n                this.setState({ Check: true });\n            }\n        } else {\n            control.innerHTML = \"You need to write again !!!\"\n            control.className = \"label label-danger\";\n        }\n        console.log(a);\n        this.setState({\n            getData: a\n        });\n        localStorage.setItem(\"Tooken\",a);\n    }\n    onSubmitAvatar = () => {\n            document.getElementById(\"rowFake\").className = \"FAKE\";\n            this.setState({ Users: this.state.tooken })\n            localStorage.setItem(\"Users\", JSON.stringify(this.state.Users));\n        }\n        // ?=======================================================================\n    OnSetAvatar=(event) => {\n            let { Users} = this.state;\n            Users[localStorage.Tooken].Avatar = event.target.value;\n            this.setState({ tooken: Users });\n            console.log('====================================');\n            console.log(\"asdf\");\n            console.log('====================================');\n      }\n      \n        //========================================================================================\n    render() {\n            return (\n           <div>\n                    <Router>\n  <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n    <nav className=\"navbar navbar-default\" role=\"navigation\">\n\n      <div className=\"navbar-header\">\n        <button type=\"button\" className=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\".navbar-ex1-collapse\">\n          <span className=\"sr-only\"> Toggle navigation </span>\n          <span className=\"icon-bar\"> </span>\n          <span className=\"icon-bar\"> </span>\n          <span className=\"icon-bar\"> </span>\n        </button>\n        </div>\n\n      <div className=\"collapse navbar-collapse navbar-ex1-collapse\">\n          \n        <ul className=\"nav navbar-nav\">\n          <li className=\"active\"> <Link to = \"/\">Home</Link></li>\n          <li> <Link to = \"/Blog\"> Blog </Link></li>\n          <li> <Link to = \"/LoginForm\" > Login Form</Link></li>\n          <li> <Link to = \"/RegisterForm\"> Logup Acount </Link></li>\n          <li> <Link to=\"/Chatting\"> Chatting </Link></li>\n        </ul>\n\n        <form className=\"navbar-form navbar-left\" role=\"search\">  \n          <div className=\"form-group\">\n            <input onChange={this.test} type=\"text\" className=\"form-control\" placeholder=\"Search\" />\n          </div> \n          <button type=\"submit\" className=\"btn btn-default\"> Submit </button> \n        </form>\n\n        <ul className=\"nav navbar-nav navbar-right\">\n          <li>\n            <span className=\"label label-info\">{ this.state.Users[localStorage.getItem('Tooken')].Name } </span> \n          </li>\n\n          <li> <img onClick={ this.setAva } src={ this.state.Users[localStorage.getItem('Tooken')].Avatar} className=\"img-responsive\"/></li> \n          <li> <Link to = \"/\">Link</Link></li>\n\n          <li className=\"dropdown\">\n            <a className=\"dropdown-toggle\" data-toggle=\"dropdown\"> Dropdown <b className=\"caret\"></b></a>\n            </li>\n            <ul className=\"dropdown-menu\">\n              <li> <Link to=\"/\"> Action </Link></li>\n              <li> <Link to=\"/\"> Another action </Link></li>\n              <li> <Link to=\"/\"> Something </Link> </li>\n              <li> <Link to=\"/\">Separated link </Link> </li>\n            </ul>\n        </ul>\n    </div>\n    </nav>\n  </div>\n\n  <div className=\"row FAKE\" id=\"rowFake\">\n    <div className=\"col-xs-8 col-sm-8 col-md-8 col-lg-8\">\n                      <div className=\"form-group\">\n                        <input onChange={this.OnSetAvatar} type=\"text\" className=\"form-control\" placeholder=\"Link Your Avatar\" />\n                      </div> \n    </div>\n\n    <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\">\n      <button onClick={ this.onSubmitAvatar } className=\"btn btn-default\">Submit </button>\n    </div>\n\n  </div>\n                    <Route path=\"/Chatting\" render={() => (<Chatting />)} />\n                    <Route path=\"/Blog\" render={() => (<Blog />)} />\n                    <Route path=\"/RegisterForm\" render={() => (< RegisterForm onSubmitForm={this.onSubmitForm} />)} />\n                    <Route path=\"/LoginForm\" render={() => (<LoginForm Check={this.state.Check} onClickSubmit={this.onClickSubmit} />)} />\n                    <Route path=\"/\" component={Home} render={() => (< Home />)} exact />\n                    </Router>\n</div>\n                                );\n                            }\n                        }\n\n                        export default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n// !asdf\n// ? asdfwqe\n// TODO asdfwqef\n// adsfew\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}